/**
 * Share utilities for different platforms
 */

export interface ShareData {
  title: string
  url: string
  summary: string
  analysisUrl?: string
}

/**
 * Share to Twitter/X
 */
export function shareToTwitter(data: ShareData): void {
  const text = `I analyzed ${data.title} and found some interesting insights! ${data.summary.substring(0, 100)}... Check out the full analysis:`
  const url = data.analysisUrl || window.location.href
  const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(url)}`
  window.open(twitterUrl, "_blank", "width=550,height=420")
}

/**
 * Share to LinkedIn
 */
export function shareToLinkedIn(data: ShareData): void {
  const url = data.analysisUrl || window.location.href
  const linkedinUrl = `https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`
  window.open(linkedinUrl, "_blank", "width=550,height=420")
}

/**
 * Share to Facebook
 */
export function shareToFacebook(data: ShareData): void {
  const url = data.analysisUrl || window.location.href
  const facebookUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`
  window.open(facebookUrl, "_blank", "width=550,height=420")
}

/**
 * Share via Gmail
 */
export function shareViaGmail(data: ShareData): void {
  const subject = `Website Analysis: ${data.title}`
  const body = `I analyzed ${data.title} (${data.url}) and thought you might find the results interesting.

Summary: ${data.summary}

View the full analysis: ${data.analysisUrl || window.location.href}

Generated by WebInsight`

  const gmailUrl = `https://mail.google.com/mail/?view=cm&fs=1&su=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`
  window.open(gmailUrl, "_blank")
}

/**
 * Create Google Docs document
 */
export function createGoogleDoc(content: string, title: string): void {
  // Create a data URL with the content
  const docContent = `${title}\n\n${content}`
  const blob = new Blob([docContent], { type: "text/plain" })
  const url = URL.createObjectURL(blob)

  // Create a temporary download link
  const a = document.createElement("a")
  a.href = url
  a.download = `${title.replace(/[^a-z0-9]/gi, "_").toLowerCase()}.txt`
  document.body.appendChild(a)
  a.click()
  document.body.removeChild(a)
  URL.revokeObjectURL(url)
}

/**
 * Copy to clipboard with proper formatting
 */
export async function copyToClipboard(content: string): Promise<boolean> {
  try {
    await navigator.clipboard.writeText(content)
    return true
  } catch (error) {
    console.error("Failed to copy to clipboard:", error)
    // Fallback for older browsers
    try {
      const textArea = document.createElement("textarea")
      textArea.value = content
      document.body.appendChild(textArea)
      textArea.select()
      document.execCommand("copy")
      document.body.removeChild(textArea)
      return true
    } catch (fallbackError) {
      console.error("Fallback copy failed:", fallbackError)
      return false
    }
  }
}
