"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Input } from "@/components/ui/input"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Sparkles, FileText, Copy, Download, Loader2, Lock } from "lucide-react"
import { toast } from "@/components/ui/use-toast"

interface AiContentStudioProps {
  analysisId: string
  websiteUrl: string
  websiteTitle?: string
  onSignUpClick: () => void
}

export function AiContentStudio({ analysisId, websiteUrl, websiteTitle, onSignUpClick }: AiContentStudioProps) {
  const [activeTab, setActiveTab] = useState("blog-post")
  const [prompt, setPrompt] = useState("")
  const [isGenerating, setIsGenerating] = useState(false)
  const [generatedContent, setGeneratedContent] = useState<string | null>(null)
  const [contentType, setContentType] = useState("blog-post")
  const [contentTone, setContentTone] = useState("professional")
  const [contentLength, setContentLength] = useState("medium")

  const handleGenerate = async () => {
    setIsGenerating(true)
    setGeneratedContent(null)

    try {
      // Simulate API call with timeout
      setTimeout(() => {
        const hostname = new URL(websiteUrl).hostname
        const title = websiteTitle || hostname

        let content = ""
        if (contentType === "blog-post") {
          content = `# ${prompt || `The Ultimate Guide to ${title}`}

## Introduction

Welcome to our comprehensive guide about ${title}. In this article, we'll explore the key aspects that make this website stand out and how it can benefit your business or personal needs.

## What Makes ${hostname} Special

${hostname} offers a unique approach to [industry/niche] with its innovative features and user-friendly interface. The platform stands out for its:

- Intuitive design and navigation
- Comprehensive feature set
- Excellent performance metrics
- Strong security implementation
- Mobile-friendly experience

## Key Benefits

When using ${hostname}, users can expect:

1. **Streamlined Workflows**: The platform simplifies complex processes
2. **Enhanced Productivity**: Tools designed to save time and effort
3. **Data-Driven Insights**: Comprehensive analytics and reporting
4. **Seamless Integration**: Works well with other popular tools
5. **Responsive Support**: Quick assistance when needed

## How to Get Started

Getting started with ${hostname} is straightforward:

1. Create an account
2. Set up your profile
3. Explore the dashboard
4. Configure your preferences
5. Start using the core features

## Conclusion

${hostname} represents a powerful solution for [target audience] looking to improve their [relevant processes]. With its combination of user-friendly design and robust functionality, it's positioned as a leading option in the market.

*This content was generated by myHerb Insight based on website analysis.*`
        } else if (contentType === "product-description") {
          content = `# ${prompt || `Introducing ${title}`}

## Product Overview

${title} offers a comprehensive solution designed to meet the needs of modern [users/businesses]. This powerful platform combines ease of use with advanced functionality.

## Key Features

- **Intuitive Interface**: Navigate with ease through a thoughtfully designed user experience
- **Powerful Analytics**: Gain valuable insights through comprehensive data visualization
- **Seamless Integration**: Works perfectly with your existing tools and workflows
- **Mobile Optimization**: Access all features on any device, anywhere
- **Enterprise-Grade Security**: Rest easy knowing your data is protected

## Why Choose ${hostname}

${hostname} stands out from competitors by offering:

1. Superior performance metrics
2. Enhanced user experience
3. Comprehensive feature set
4. Excellent support options
5. Competitive pricing structure

## Perfect For

This solution is ideal for:
- Small to medium businesses
- Enterprise organizations
- Professional service providers
- E-commerce operations
- Educational institutions

## Get Started Today

Experience the difference that ${hostname} can make for your [business/personal needs]. Visit ${websiteUrl} to learn more or start your free trial.

*This product description was generated by myHerb Insight based on website analysis.*`
        } else {
          content = `# ${prompt || `About ${title}`}

## Our Mission

At ${hostname}, we're dedicated to providing exceptional [products/services] that help our customers achieve their goals. Our mission is to deliver outstanding value through innovation, quality, and customer-focused solutions.

## Who We Are

Founded with a passion for excellence, ${hostname} has grown to become a trusted name in the [industry/niche]. Our team of dedicated professionals brings together decades of experience to create solutions that truly make a difference.

## Our Approach

We believe in:

- **Innovation**: Constantly exploring new ideas and technologies
- **Quality**: Maintaining the highest standards in everything we do
- **Integrity**: Building relationships based on trust and transparency
- **Customer Focus**: Putting our users' needs at the center of our decisions
- **Continuous Improvement**: Always seeking ways to enhance our offerings

## Our Services

${hostname} specializes in providing:

1. Comprehensive [product/service] solutions
2. Expert consultation and support
3. Customized implementations
4. Ongoing maintenance and updates
5. Training and educational resources

## Connect With Us

We'd love to hear from you! Visit ${websiteUrl} to learn more about how we can help you achieve your goals.

*This about page content was generated by myHerb Insight based on website analysis.*`
        }

        setGeneratedContent(content)
        setIsGenerating(false)

        toast({
          title: "Content Generated!",
          description: "Your AI-generated content is ready.",
        })
      }, 3000)
    } catch (error) {
      console.error("Generation error:", error)
      setIsGenerating(false)
      toast({
        title: "Generation Failed",
        description: "Failed to generate content. Please try again.",
        variant: "destructive",
      })
    }
  }

  const copyContent = async () => {
    if (!generatedContent) return

    try {
      await navigator.clipboard.writeText(generatedContent)
      toast({
        title: "Copied!",
        description: "Content copied to clipboard.",
      })
    } catch (error) {
      toast({
        title: "Copy Failed",
        description: "Unable to copy to clipboard.",
        variant: "destructive",
      })
    }
  }

  const downloadContent = () => {
    if (!generatedContent) return

    const element = document.createElement("a")
    const file = new Blob([generatedContent], { type: "text/markdown" })
    element.href = URL.createObjectURL(file)
    element.download = `${contentType}-${new Date().toISOString().split("T")[0]}.md`
    document.body.appendChild(element)
    element.click()
    document.body.removeChild(element)

    toast({
      title: "Downloaded!",
      description: "Content downloaded as Markdown file.",
    })
  }

  return (
    <Card className="border-0 shadow-lg bg-white">
      <CardHeader>
        <CardTitle className="flex items-center gap-3 text-2xl">
          <div className="w-10 h-10 rounded-lg bg-gradient-to-r from-purple-500 to-green-500 flex items-center justify-center">
            <Sparkles className="h-5 w-5 text-white" />
          </div>
          <span className="bg-gradient-to-r from-purple-600 to-green-600 bg-clip-text text-transparent">
            AI Content Studio
          </span>
        </CardTitle>
        <CardDescription>Generate professional content based on your website analysis</CardDescription>
      </CardHeader>
      <CardContent className="space-y-6">
        <Tabs defaultValue="blog-post" value={activeTab} onValueChange={setActiveTab}>
          <TabsList className="grid grid-cols-3 mb-6">
            <TabsTrigger
              value="blog-post"
              className="data-[state=active]:bg-purple-100 data-[state=active]:text-purple-700"
            >
              Blog Post
            </TabsTrigger>
            <TabsTrigger
              value="product-description"
              className="data-[state=active]:bg-green-100 data-[state=active]:text-green-700"
            >
              Product Description
            </TabsTrigger>
            <TabsTrigger
              value="about-page"
              className="data-[state=active]:bg-purple-100 data-[state=active]:text-purple-700"
            >
              About Page
            </TabsTrigger>
          </TabsList>

          {["blog-post", "product-description", "about-page"].map((tab) => (
            <TabsContent key={tab} value={tab} className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Content Type</label>
                  <Select value={contentType} onValueChange={setContentType}>
                    <SelectTrigger>
                      <SelectValue placeholder="Select content type" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="blog-post">Blog Post</SelectItem>
                      <SelectItem value="product-description">Product Description</SelectItem>
                      <SelectItem value="about-page">About Page</SelectItem>
                      <SelectItem value="landing-page" disabled>
                        Landing Page (Premium)
                      </SelectItem>
                      <SelectItem value="case-study" disabled>
                        Case Study (Premium)
                      </SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Content Tone</label>
                  <Select value={contentTone} onValueChange={setContentTone}>
                    <SelectTrigger>
                      <SelectValue placeholder="Select tone" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="professional">Professional</SelectItem>
                      <SelectItem value="conversational">Conversational</SelectItem>
                      <SelectItem value="enthusiastic">Enthusiastic</SelectItem>
                      <SelectItem value="technical">Technical</SelectItem>
                      <SelectItem value="persuasive">Persuasive</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">Custom Prompt (Optional)</label>
                <Input
                  placeholder={`Enter a title or prompt for your ${
                    tab === "blog-post"
                      ? "blog post"
                      : tab === "product-description"
                        ? "product description"
                        : "about page"
                  }`}
                  value={prompt}
                  onChange={(e) => setPrompt(e.target.value)}
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">Content Length</label>
                <Select value={contentLength} onValueChange={setContentLength}>
                  <SelectTrigger>
                    <SelectValue placeholder="Select length" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="short">Short (~300 words)</SelectItem>
                    <SelectItem value="medium">Medium (~600 words)</SelectItem>
                    <SelectItem value="long">Long (~1000 words)</SelectItem>
                    <SelectItem value="comprehensive" disabled>
                      Comprehensive (~2000 words) (Premium)
                    </SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="flex justify-center">
                <Button
                  onClick={handleGenerate}
                  disabled={isGenerating}
                  size="lg"
                  className="bg-gradient-to-r from-purple-500 to-green-500 hover:from-purple-600 hover:to-green-600 text-white shadow-md px-8"
                >
                  {isGenerating ? (
                    <>
                      <Loader2 className="h-5 w-5 mr-2 animate-spin" />
                      Generating...
                    </>
                  ) : (
                    <>
                      <Sparkles className="h-5 w-5 mr-2" />
                      Generate Content
                    </>
                  )}
                </Button>
              </div>

              {generatedContent && (
                <div className="space-y-4">
                  <div className="flex items-center justify-between">
                    <h3 className="text-lg font-medium">Generated Content</h3>
                    <div className="flex gap-2">
                      <Button variant="outline" size="sm" onClick={copyContent}>
                        <Copy className="h-4 w-4 mr-2" />
                        Copy
                      </Button>
                      <Button variant="outline" size="sm" onClick={downloadContent}>
                        <Download className="h-4 w-4 mr-2" />
                        Download
                      </Button>
                    </div>
                  </div>
                  <div className="bg-gray-50 p-6 rounded-lg border border-gray-200 overflow-auto max-h-[500px]">
                    <pre className="whitespace-pre-wrap font-mono text-sm">{generatedContent}</pre>
                  </div>
                </div>
              )}

              <div className="bg-purple-50 p-6 rounded-lg border border-purple-200">
                <div className="flex items-start gap-4">
                  <div className="bg-gradient-to-r from-purple-500 to-green-500 rounded-full p-2">
                    <Lock className="h-5 w-5 text-white" />
                  </div>
                  <div>
                    <h3 className="text-lg font-medium text-purple-800 mb-2">Unlock Premium Features</h3>
                    <p className="text-purple-700 mb-4">
                      Sign up for a premium account to access advanced content generation features, including SEO
                      optimization, custom templates, and more.
                    </p>
                    <Button
                      onClick={onSignUpClick}
                      variant="outline"
                      className="border-2 border-purple-300 text-purple-700 hover:bg-purple-100"
                    >
                      <FileText className="h-4 w-4 mr-2" />
                      Sign Up for Premium
                    </Button>
                  </div>
                </div>
              </div>
            </TabsContent>
          ))}
        </Tabs>
      </CardContent>
    </Card>
  )
}
